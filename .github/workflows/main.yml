name: App Chat

on:
  push:
    tags:
      - '*'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v2
        with:
          distribution: "zulu"
          java-version: "11"
      - name: Decode google-services.json
        env: 
            GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: echo "$GOOGLE_SERVICES_JSON" > android/app/google-services.json
      - name: Decode firebase_option
        env:
          firebase_options_dart: ${{secrets.FIREBASE_OPTION}}
        run : echo "$firebase_options_dart" > lib/firebase_options.dart

      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
      - run: dart pub global activate melos
      - run: melos bootstrap
      - run: melos gen-strings
      - run: flutter pub get
      - run: melos build-resources
      - run: flutter build apk
      - uses: actions/upload-artifact@v1
        with:
          name: release-apk
          path: build/app/outputs/apk/release/app-release.apk
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Test
        run: |
          echo $RELEASE_VERSION
          echo ${{ env.RELEASE_VERSION }}
      - name: upload artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
            appId: ${{secrets.APPID}}
            token: ${{secrets.TOKEN}}
            groups: pre-tester
            file: build/app/outputs/apk/release/app-release.apk
            releaseNotes: "Release for ${{ github.ref }}"
            releaseNotesFile: ''
            appRelease: ${{ github.ref }}
